/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author MONICA
 */
public class Cambios extends javax.swing.JFrame {
    MySqlConn conn;
    MySqlConn objConn = new MySqlConn();
    /**
     * Creates new form Cambios
     */
    public Cambios(MySqlConn conn) {
        this.conn = conn;
        initComponents();
        this.setLocationRelativeTo(this);
    }
    public Cambios() {
        
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldBusca = new javax.swing.JTextField();
        jButtonBuscar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableInfo = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxCambio = new javax.swing.JComboBox();
        jLabelDatoCambia = new javax.swing.JLabel();
        jButtonActualizar = new javax.swing.JButton();
        jTextFieldDatoACambiar = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));

        jLabel2.setText("Ingresa el nombre del huesped");

        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        jTableInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTableInfo);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jButtonBuscar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(153, 255, 153));

        jLabel1.setText("Dato a cambiar");

        jComboBoxCambio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione una opcion", "Nombre", "Ciudad", "Numero de Personas" }));
        jComboBoxCambio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCambioActionPerformed(evt);
            }
        });

        jLabelDatoCambia.setText(".");

        jButtonActualizar.setText("Actualizar Informacion");
        jButtonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabelDatoCambia, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextFieldDatoACambiar, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonActualizar))
                    .addComponent(jComboBoxCambio, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(293, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxCambio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDatoCambia)
                    .addComponent(jTextFieldDatoACambiar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonActualizar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        // TODO add your handling code here:
//        String nombre = this.jTextFieldBusca.getText();
        String query = "select * from huespedes where nombre = "+  "'" +
                this.jTextFieldBusca.getText() + "'";;
        this.conn.Consult(query);
        int n=0;
        try {
            this.conn.rs.last();
            n = this.conn.rs.getRow();
            this.conn.rs.first();
        } catch (SQLException ex) {
            System.out.println("");
            JOptionPane.showMessageDialog(this, "Registro no encontrado");
        }
        if (n != 0) {
            //System.out.println("n "  + n);
            Object datos[][] = new Object [n][8];
            for (int i = 0; i < n; i++) {
                try {
                    datos[i][0] = this.conn.rs.getString(1);
                    datos[i][1] = this.conn.rs.getString(2);
                    datos[i][2] = this.conn.rs.getInt(3);
                    datos[i][3] = this.conn.rs.getString(4);
                    datos[i][4] = this.conn.rs.getInt(5);
                    datos[i][5] = this.conn.rs.getDate(6);
                    datos[i][6] = this.conn.rs.getInt(7);
                    datos[i][7] = this.conn.rs.getString(8);
                    this.conn.rs.next();
                } catch (Exception ex) {
                    System.out.println("Error #2..." + ex.getMessage());
                   JOptionPane.showMessageDialog(this, ex.getMessage());
                }
            }
            
            String columnas[] = {"NOMBRE", " TIPO DE HABITACION", "NUMERO DE HAB", "CIUDAD", "NUM PERSONAS", " FECHA ENTRADA", "TOTAL DE DIAS", "FECHA DE SALIDA"};
            this.jTableInfo.setModel(new DefaultTableModel(datos, columnas));
        }else{
            JOptionPane.showMessageDialog(this, "No hay registro del huesped");
        }
            
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jComboBoxCambioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCambioActionPerformed
        // TODO add your handling code here:
        if (this.jComboBoxCambio.getSelectedItem().equals("Nombre")) {
            this.jLabelDatoCambia.setText("Cambia el nombre de el huesped");
            this.jTextFieldDatoACambiar.setEditable(true);
        }else if (this.jComboBoxCambio.getSelectedItem().equals("Ciudad")) {
            this.jLabelDatoCambia.setText("Cambia la ciudad de origen");
            this.jTextFieldDatoACambiar.setEditable(true);
        }else if (this.jComboBoxCambio.getSelectedItem().equals("Numero de Personas")) {
            this.jLabelDatoCambia.setText("Numero de personas a aumentar o disminuir");
            this.jTextFieldDatoACambiar.setEditable(true);
        }else{
            this.jLabelDatoCambia.setText("No hay campo seleccionado");
            this.jTextFieldDatoACambiar.setEditable(false);
        }
    }//GEN-LAST:event_jComboBoxCambioActionPerformed

    private void jButtonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualizarActionPerformed
        // TODO add your handling code here:
        String nombreO, cambio;
        nombreO = this.jTextFieldBusca.getText();
        cambio = this.jTextFieldDatoACambiar.getText();
        int personas = Integer.parseInt(cambio);
        
        if (this.jComboBoxCambio.getSelectedItem().equals("Nombre")) {
            String query = "UPDATE huespedes SET nombre = '" + cambio + "' WHERE nombre = '" + nombreO + "'";
            this.conn.Update(query);
            JOptionPane.showMessageDialog(this, "Nombre del huesped actualizado");
        }else if (this.jComboBoxCambio.getSelectedItem().equals("Ciudad")) {
            String query = "UPDATE huespedes SET ciudad = '" + cambio + "' WHERE nombre = '" + nombreO + "'";
            this.conn.Update(query);
            JOptionPane.showMessageDialog(this, "Ciudad origen actualizada");
        }else if (this.jComboBoxCambio.getSelectedItem().equals("Numero de Personas")) {
            
            //String dato = String.valueOf(jTableInfo.getValueAt(jTableInfo.getSelectedRow(),1));
            String dato = String.valueOf(jTableInfo.getValueAt(0, 1));
            
//            this.jTableInfo.getColumn("TIPO DE HABITACION")
            if (dato.equals("Sencilla")) {
                if (personas == 1) {
                    String query = "UPDATE huespedes SET numpersonas = '" + personas + "' WHERE nombre = '" + nombreO + "'";
                    this.conn.Update(query);
                    JOptionPane.showMessageDialog(this, "Numero de personas actualizadas");
                //imprime el voucher 
                
                } else if (personas >= 2 && personas <= 3) {
                    String query = "UPDATE huespedes SET numpersonas = '" + personas + "' WHERE nombre = '" + nombreO + "'";
                    this.conn.Update(query);
                    JOptionPane.showMessageDialog(this, "Se cobrará un total de 500 por persona extra");
                    JOptionPane.showMessageDialog(this, "Numero de personas actualizadas");
                }else if (personas >= 4) {
                    JOptionPane.showMessageDialog(this, "El total de personas excede el limite permitido. Se recomienda otra habitacion");
                }
            }
            
            
            
            
            
            else if (dato.equals("Doble")) {
                if (personas <= 2) {
                    String query = "UPDATE huespedes SET numpersonas = '" + personas + "' WHERE nombre = '" + nombreO + "'";
                    this.conn.Update(query);
                    JOptionPane.showMessageDialog(this, "Numero de personas actualizadas");
                //imprime el voucher 
                
                } else if (personas >= 3 && personas <= 4) {
                    String query = "UPDATE huespedes SET numpersonas = '" + personas + "' WHERE nombre = '" + nombreO + "'";
                    this.conn.Update(query);
                    JOptionPane.showMessageDialog(this, "Se cobrará un total de 500 por persona extra");
                    JOptionPane.showMessageDialog(this, "Numero de personas actualizadas");
                }else if (personas >= 5) {
                    JOptionPane.showMessageDialog(this, "El total de personas excede el limite permitido. Se recomienda otra habitacion");
                }
                
                
                
                
            }else if (dato.equals("Triple")) {
                if (personas <= 3) {
                    String query = "UPDATE huespedes SET numpersonas = '" + personas + "' WHERE nombre = '" + nombreO + "'";
                    this.conn.Update(query);
                    JOptionPane.showMessageDialog(this, "Numero de personas actualizadas");
                //imprime el voucher 
                
                } else if (personas >= 4 && personas <= 5) {
                    String query = "UPDATE huespedes SET numpersonas = '" + personas + "' WHERE nombre = '" + nombreO + "'";
                    this.conn.Update(query);
                    JOptionPane.showMessageDialog(this, "Se cobrará un total de 500 por persona extra");
                    JOptionPane.showMessageDialog(this, "Numero de personas actualizadas");
                }else if (personas >= 6) {
                    JOptionPane.showMessageDialog(this, "El total de personas excede el limite permitido. Se recomienda otra habitacion");
                }
            }
            
            
            
            
//            String query = "UPDATE huespedes SET numpersonas = '" + personas + "' WHERE nombre = '" + nombreO + "'";
//            this.conn.Update(query);
//            JOptionPane.showMessageDialog(this, "Numero de personas actualizadas");
        }else{
            JOptionPane.showMessageDialog(this, "No se pudieron ralizar cambios");
        }
        
    }//GEN-LAST:event_jButtonActualizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        final MySqlConn objConn = new MySqlConn();
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cambios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cambios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cambios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cambios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cambios(objConn).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonActualizar;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JComboBox jComboBoxCambio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelDatoCambia;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableInfo;
    private javax.swing.JTextField jTextFieldBusca;
    private javax.swing.JTextField jTextFieldDatoACambiar;
    // End of variables declaration//GEN-END:variables
}
