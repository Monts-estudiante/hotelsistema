/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.LinkedList;
import java.util.Queue;
import javax.swing.JOptionPane;

/**
 *
 * @author MONICA
 */
public class Registro extends javax.swing.JFrame {
    MySqlConn conn;
    MySqlConn objConn = new MySqlConn();
    Queue<Habitacion> piso1 = new LinkedList<>();
    Queue<Habitacion> piso2 = new LinkedList<>();
    int habpi1sen[] = {100, 105, 110, 115};
    int habpi1dob[] = {120, 125, 130, 135, 140};
    int habpi1tri[] = {145, 150, 155, 160, 165, 170};
    int habpi2sen[] = {210, 215, 220, 225, 230, 235, 240, 245};
    int habpi2dob[] = {250, 255, 260};
    int habpi2tri[] = {265, 270, 275, 280};
    String tipoHab[] = {"Sencilla", "Doble", "Triple"};
    
    /**
     * Creates new form Registro
     */
    
     public Registro(MySqlConn conn) {
        this.conn = conn;
        initComponents();
        this.setLocationRelativeTo(this);
    }
    
    public Registro() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        jDialog3 = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldNombre = new javax.swing.JTextField();
        jComboBoxHabitacion = new javax.swing.JComboBox();
        jTextFieldCiudad = new javax.swing.JTextField();
        jSpinnerPersonas = new javax.swing.JSpinner();
        jSpinnerTotDias = new javax.swing.JSpinner();
        jButtonRegsitrar = new javax.swing.JButton();
        jDateChooserFechaEntrada = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jButtonSeleccion = new javax.swing.JButton();
        jButtonCambios = new javax.swing.JButton();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog3Layout = new javax.swing.GroupLayout(jDialog3.getContentPane());
        jDialog3.getContentPane().setLayout(jDialog3Layout);
        jDialog3Layout.setHorizontalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog3Layout.setVerticalGroup(
            jDialog3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nombre");

        jLabel2.setText("Tipo de habitacion");

        jLabel3.setText("Ciudad de origen");

        jLabel4.setText("Numero de personas");

        jLabel5.setText("Total de dias");

        jComboBoxHabitacion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sencilla", "Doble", "Triple" }));

        jButtonRegsitrar.setText("Registrar");
        jButtonRegsitrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegsitrarActionPerformed(evt);
            }
        });


        jDateChooserFechaEntrada.setDateFormatString("yyyy/MM/d");


        jLabel6.setText("Dia de entrda ");

        jButtonSeleccion.setText("Seleccionar");
        jButtonSeleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSeleccionActionPerformed(evt);
            }
        });


        jButtonCambios.setText("Realizar cambios");
        jButtonCambios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCambiosActionPerformed(evt);
            }
        });


        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()

                .addGap(147, 147, 147)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel5))
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooserFechaEntrada, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSpinnerTotDias)
                    .addComponent(jTextFieldCiudad)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBoxHabitacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jButtonSeleccion)
                        .addGap(0, 69, Short.MAX_VALUE))
                    .addComponent(jSpinnerPersonas)
                    .addComponent(jTextFieldNombre))
                .addGap(106, 106, 106))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(203, 203, 203)
                .addComponent(jButtonRegsitrar)
                .addGap(122, 122, 122)
                .addComponent(jButtonCambios)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBoxHabitacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSeleccion))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jSpinnerPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)

                    .addComponent(jDateChooserFechaEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(34, 34, 34)

                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinnerTotDias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(45, 45, 45)

                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRegsitrar)
                    .addComponent(jButtonCambios))

                .addContainerGap(65, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSeleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSeleccionActionPerformed
        // TODO add your handling code here:
        Croquis llamar = new Croquis(objConn);
        llamar.setVisible(true);
        // Y nos ocultamos nosotros
    }//GEN-LAST:event_jButtonSeleccionActionPerformed

    private void jButtonRegsitrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegsitrarActionPerformed
        String nombre, habitacion, ciudad, totPersonas, totDias;
        int personas, dias;
        int cuar = 0;
        boolean ocu;
        /*OBTIENE LOS VALORES INGRESADOS EN EL FRAME*/
        Habitacion oc = new Habitacion();
        nombre = this.jTextFieldNombre.getText();
        habitacion = (String)this.jComboBoxHabitacion.getSelectedItem();
        ciudad = this.jTextFieldCiudad.getText();
        personas = (int)this.jSpinnerPersonas.getValue();
        String lim = Integer.toString(personas);
        /*OBTIENE LA FECHA INGRESADA EN EN JDATECHOOSER Y LA CONVIERTE PARA SUMERLE LOS DIAS INGRESADOS*/
        java.util.Date fechaa = this.jDateChooserFechaEntrada.getDate();
        java.sql.Date fec = new java.sql.Date(fechaa.getTime());

        String d = this.jSpinnerTotDias.getValue().toString();
        dias = Integer.parseInt(d);
        String day = Integer.toString(this.jDateChooserFechaEntrada.getCalendar().get(Calendar.DAY_OF_MONTH));
        String month = Integer.toString(this.jDateChooserFechaEntrada.getCalendar().get(Calendar.MONTH) + 1);
        String year = Integer.toString(this.jDateChooserFechaEntrada.getCalendar().get(Calendar.YEAR));
        String fecha = (year + "-" + month + "-" + day);
        /*LA FUNCION SE ENCUNETRA MAS ABAJO Y ESTA LE SUMA LOS DIAS INGRESADOS
        EN EL SPINNER A LA FECHA INGRESADA DE ENTRADA*/
        String res = Registro.sumarDiasAFecha(fecha, dias);
        System.out.println(res);

        /*SELECCIONA ALEATORIAMENTE EL NUMERO DE LA HABITACION*/
        if (habitacion.equals("Sencilla")) {

            /*VALIDACION PARA LA CANTIDAD DE PERSONAS*/
            if (personas == 1) {
                int ran = (int)(Math.random() * (3 - 0 + 1 ) + 0);
                cuar =  habpi1sen[ran];
                this.piso1.add(new Habitacion(habitacion, habpi1sen[ran], true));
                System.out.println(this.piso1);
                Registro.subeMysql(nombre, habitacion, cuar, ciudad, personas, fec, dias, res, conn);
                JOptionPane.showMessageDialog(this, "Registro exitoso");
                //imprime el voucher 
                JOptionPane.showConfirmDialog(this,  personasVoucher(nombre, ciudad, fec, res, lim, habitacion));
            } else if (personas >= 2 && personas <= 3) {
                int ran = (int)(Math.random() * (3 - 0 + 1 ) + 0);
                cuar =  habpi1sen[ran];
                this.piso1.add(new Habitacion(habitacion, habpi1sen[ran], true));
                System.out.println(this.piso1);
                JOptionPane.showMessageDialog(this, "Se cobrará un total de 500 por persona extra");
                Registro.subeMysql(nombre, habitacion, cuar, ciudad, personas, fec, dias, res, conn);
                JOptionPane.showMessageDialog(this, "Registro exitoso");
                //imprime el voucher 
                JOptionPane.showConfirmDialog(this,  personasVoucher(nombre, ciudad, fec, res, lim, habitacion));
            }else if (personas >= 4) {
                JOptionPane.showMessageDialog(this, "El total de personas excede el limite permitido. Se recomienda otra habitacion");
            }
        }if (habitacion.equals("Doble")) {

            /*VALIDACION PARA LA CANTIDAD DE PERSONAS*/

            if (personas <= 2) {

                int ran = (int)(Math.random() * (4 - 0 + 1 ) + 0);
                cuar =  habpi1dob[ran];
                this.piso1.add(new Habitacion(habitacion, habpi1dob[ran], true));
                System.out.println(this.piso1);
                Registro.subeMysql(nombre, habitacion, cuar, ciudad, personas, fec, dias, res, conn);
                JOptionPane.showMessageDialog(this, "Registro exitoso");
                //imprime el voucher 
                JOptionPane.showConfirmDialog(this,  personasVoucher(nombre, ciudad, fec, res, lim, habitacion));
            } else if (personas >= 3 && personas <= 4) {
                int ran = (int)(Math.random() * (4 - 0 + 1 ) + 0);
                cuar =  habpi1dob[ran];
                this.piso1.add(new Habitacion(habitacion, habpi1dob[ran], true));
                System.out.println(this.piso1);
                JOptionPane.showMessageDialog(this, "Se cobrará un total de 500 por persona extra");
                Registro.subeMysql(nombre, habitacion, cuar, ciudad, personas, fec, dias, res, conn);
                JOptionPane.showMessageDialog(this, "Registro exitoso");
                //imprime el voucher 
                JOptionPane.showConfirmDialog(this,  personasVoucher(nombre, ciudad, fec, res, lim, habitacion));
            } else if (personas >= 5) {
                JOptionPane.showMessageDialog(this, "El total de personas excede el limite permitido. Se recomienda otra habitacion");
            }
        }if (habitacion.equals("Triple")) {

            /*VALIDACION PARA LA CANTIDAD DE PERSONAS*/

            if (personas <= 3) {
                
                int ran = (int)(Math.random() * (5 - 0 + 1 ) + 0);
                cuar =  habpi1tri[ran];
                this.piso1.add(new Habitacion(habitacion, habpi1tri[ran], true));
                System.out.println(this.piso1);
                Registro.subeMysql(nombre, habitacion, cuar, ciudad, personas, fec, dias, res, conn);
                JOptionPane.showMessageDialog(this, "Registro exitoso");
                
                //imprime el voucher 
                JOptionPane.showConfirmDialog(this,  personasVoucher(nombre, ciudad, fec, res, lim, habitacion));
            } else if (personas >= 4 && personas <= 5) {
                int ran = (int)(Math.random() * (5 - 0 + 1 ) + 0);
                cuar =  habpi1tri[ran];
                this.piso1.add(new Habitacion(habitacion, habpi1tri [ran], true));
                System.out.println(this.piso1);
                JOptionPane.showMessageDialog(this, "Se cobrará un total de 500 por persona extra");
                Registro.subeMysql(nombre, habitacion, cuar, ciudad, personas, fec, dias, res, conn);
                JOptionPane.showMessageDialog(this, "Registro exitoso");
                //imprime el voucher 
                JOptionPane.showConfirmDialog(this,  personasVoucher(nombre, ciudad, fec, res, lim, habitacion));
            }else if (personas >= 6) {
                JOptionPane.showMessageDialog(this, "El total de personas excede el limite permitido. Se recomienda otra habitacion aparte");
            }
        }//else{
            //            System.out.println("Habitacion ya se encuentra ocupada");
            //        }
        /*GENERA VOUCHER*/
//        JOptionPane.showConfirmDialog(this,  personas(nombre, ciudad, fec, res, lim, habitacion));

    }//GEN-LAST:event_jButtonRegsitrarActionPerformed


    private void jComboBoxHabitacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxHabitacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxHabitacionActionPerformed
    private void jButtonCambiosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCambiosActionPerformed
        // TODO add your handling code here:
        Cambios llamar=new Cambios(objConn);
        llamar.setVisible(true);
        this.setVisible(false);  

    }//GEN-LAST:event_jButtonCambiosActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        final MySqlConn objConn = new MySqlConn();
       
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registro(objConn).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCambios;
    private javax.swing.JButton jButtonRegsitrar;
    private javax.swing.JButton jButtonSeleccion;
    private javax.swing.JComboBox jComboBoxHabitacion;
    private com.toedter.calendar.JDateChooser jDateChooserFechaEntrada;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JDialog jDialog3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner jSpinnerPersonas;
    private javax.swing.JSpinner jSpinnerTotDias;
    private javax.swing.JTextField jTextFieldCiudad;
    private javax.swing.JTextField jTextFieldNombre;
    // End of variables declaration//GEN-END:variables
public static String sumarDiasAFecha(String fecha, int dias) {
        if(dias == 0){
            return fecha;
        }

        String[] f = fecha.split("-");
        Calendar calendar = Calendar.getInstance();
        calendar.set(Integer.parseInt(f[0]), Integer.parseInt(f[1])-1, Integer.parseInt(f[2]));

        calendar.add(Calendar.DAY_OF_MONTH, dias);
        SimpleDateFormat fe = new SimpleDateFormat("YYYY-MM-dd");
        return fe.format(calendar.getTime());
    }

public static void subeMysql(String nom, String hab, int cua, String ciu, int per, java.sql.Date fec, int dia, String res, MySqlConn conn){
        /*MANDA LOS DATOS A LA BASE DE DATOS */
        
        String parte1, parte2, query;
        
        parte1 = "insert into huespedes values (";
        parte2 = "'" + nom + "','" + hab + "','" + cua + "','" + ciu + "','" + per + "','" + fec + "','" + dia + "','" + res + "')";
        query = parte1 + parte2;
        System.out.println(query);
        int j = conn.Update(query);
    }

public static String personasVoucher(String nombre, String ciudad, java.sql.Date fec, String res, String lim, String habitacion){
    return "/*NOMBRE Y LOGO\n*/" + 
                "LEMA\n" +
                "\nNombre de huesped:         " + nombre +
                "\nCiudad de origen:          " + ciudad +
                "\nFecha de ingreso:          " + fec +
                "\nFecha de salida:           " + res + 
                "\nNumero de habitacion:      " + 
                "  Piso:    " +
                "\nTipo de habitacion:    " +   habitacion  +
                "   Limite:    " + lim + 
                "\nPersona(s) extra:    " ;
    
    
    
    }
}
