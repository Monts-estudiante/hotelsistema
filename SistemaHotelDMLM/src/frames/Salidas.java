/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

//import clases.generPDF;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
//import static generapdf.generapdf2.creaPdf;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Tania Montserrat
 */
public class Salidas extends javax.swing.JFrame {
    MySqlConn conn;
    MySqlConn objConn = new MySqlConn();
    //variables
    String nom;
    String tipoHab;
    String ciudad;
    String fechaentr="Not found";
    String fechasal="Not found";    
    int nohab=0;
    int totaldd=0;
    int numper=0;
    //acumuladores
    double total=0.0;
    
    //java.sql.Date fec = new java.sql.Date(fechaa.getTime());
            
    /**
     * Creates new form Salidas
     */
    
     public Salidas(MySqlConn conn) {
        this.conn = conn;
        initComponents();
        this.setLocationRelativeTo(this);
    }
    
    public Salidas() {
        initComponents();            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldNumHab = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jRadioButtonPersonaEx = new javax.swing.JRadioButton();
        jRadioButtonGym = new javax.swing.JRadioButton();
        jRadioButtonSpa = new javax.swing.JRadioButton();
        jRadioButtonBar = new javax.swing.JRadioButton();
        jRadioButtonTintoreria = new javax.swing.JRadioButton();
        jRadioButtonNiñera = new javax.swing.JRadioButton();
        jRadioButtonServCuarto = new javax.swing.JRadioButton();
        jRadioButtonEventosE = new javax.swing.JRadioButton();
        jButtonTiket = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableHabitacion = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablehuesped = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableServicios = new javax.swing.JTable();
        jButtonRegresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(237, 175, 175));

        jLabel2.setFont(new java.awt.Font("Arial", 2, 24)); // NOI18N
        jLabel2.setText("Salidas");

        jLabel3.setFont(new java.awt.Font("Arial", 2, 18)); // NOI18N
        jLabel3.setText("Habitacion. no");

        jTextFieldNumHab.setText(" ");

        jLabel1.setText("Servicios extras.");

        jRadioButtonPersonaEx.setText("Persona extra.");

        jRadioButtonGym.setText("Gimnasio.");

        jRadioButtonSpa.setText("SPA.");

        jRadioButtonBar.setText("Bar.");

        jRadioButtonTintoreria.setText("Tintoreria.");

        jRadioButtonNiñera.setText("Niñera");

        jRadioButtonServCuarto.setText("Servicio al cuarto.");

        jRadioButtonEventosE.setText("Eventos especiales");

        jButtonTiket.setBackground(new java.awt.Color(255, 255, 255));
        jButtonTiket.setText("Tiket");
        jButtonTiket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTiketActionPerformed(evt);
            }
        });

        jTableHabitacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableHabitacion);

        jTablehuesped.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTablehuesped);

        jTableServicios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTableServicios);

        jButtonRegresar.setText("Regresar");
        jButtonRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(281, 281, 281))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jButtonTiket))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldNumHab, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonRegresar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 210, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButtonSpa)
                    .addComponent(jRadioButtonBar)
                    .addComponent(jRadioButtonPersonaEx)
                    .addComponent(jRadioButtonGym))
                .addGap(131, 131, 131)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButtonTintoreria)
                    .addComponent(jRadioButtonNiñera)
                    .addComponent(jRadioButtonServCuarto)
                    .addComponent(jRadioButtonEventosE))
                .addGap(134, 134, 134))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jLabel2))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel2)
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonPersonaEx)
                    .addComponent(jRadioButtonTintoreria)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldNumHab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonNiñera)
                    .addComponent(jRadioButtonGym))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButtonSpa)
                            .addComponent(jRadioButtonServCuarto)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonTiket)
                            .addComponent(jButtonRegresar))))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonBar)
                    .addComponent(jRadioButtonEventosE))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonTiketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTiketActionPerformed
        // TODO add your handling code here:
        String numero;
        int NumHab;
        double costoext=0;
        int b1=0, b2=0,b3=0,b4=0,b5=0,b6=0,b7=0,b8=0;
        numero=this.jTextFieldNumHab.getText().trim();
        //Obtengo el contenido de textfild y lo convierto a int
        NumHab= Integer.parseInt(numero);
        
        //Sumatoria de costos extras.
        //if(this.jRadioButtonPersonaEx.isSelected()){ costoext=(costoext+200)*this.totaldd; b1=1;}
        if(this.jRadioButtonGym.isSelected()){ costoext=costoext+50; b2=1;}
        if(this.jRadioButtonSpa.isSelected()){ costoext=costoext+300; b3=1;}
        if(this.jRadioButtonBar.isSelected()){ costoext=costoext+400; b4=1;}
        if(this.jRadioButtonTintoreria.isSelected()){ costoext=costoext+175; b5=1;}
        if(this.jRadioButtonNiñera.isSelected()){ costoext=costoext+190; b6=1;}
        if(this.jRadioButtonServCuarto.isSelected()){ costoext=costoext+250; b7=1;}
        if(this.jRadioButtonEventosE.isSelected()){ costoext=costoext+1000; b8=1;}
        JOptionPane.showMessageDialog(this, "costo extra jradiobutons: "+ costoext);
        
        String query = "select * from habitaciones where numerohab = "+  "'" +
                NumHab+ "'";;
        this.conn.Consult(query);
        int n=0;
        
        try {
            this.conn.rs.last();
            n = this.conn.rs.getRow();
            this.conn.rs.first();
            //JOptionPane.showMessageDialog(this, "Habitacion Encontrada.");                 
        } catch (SQLException ex) {
            Logger.getLogger(Salidas.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Habitacion No Encontrada.");
        }
        
        //Obtencion de la tabla habitaciones 
        if (n != 0){ 
            Object datos[][] = new Object [n][8];
            for (int i = 0; i < n; i++) {
                try {
                    datos[i][0] = this.conn.rs.getString(1);
                    datos[i][1] = this.conn.rs.getInt(2);
                    datos[i][2] = this.conn.rs.getInt(3);
                    datos[i][3] = this.conn.rs.getBoolean(4);
                    this.conn.rs.next();
                } catch (Exception ex) {
                    System.out.println("Error #2..." + ex.getMessage());
                   JOptionPane.showMessageDialog(this, ex.getMessage());
                }
            }
        
        //Se recuperan datos de la base y se mandan a la jTableHabitacion
        String columnas[] = {"Tipo habitación","Número habitación","Piso","Ocupada"};
            this.jTableHabitacion.setModel(new DefaultTableModel(datos, columnas));
        }else{
            JOptionPane.showMessageDialog(this, "No hay registro del huesped");
        }
        
        //se cambia a faslso si el boolean es true
        String query2 = "UPDATE habitaciones SET ocupada = '0' WHERE ocupada = '1'";
            this.conn.Update(query2);
                
        //Obtencion de datos de Huesped
            
        String query3 = "select * from huespedes where numhab = "+  "'" +
                NumHab+ "'";;
        this.conn.Consult(query3);
        int x=0;
        
        try {
            this.conn.rs.last();
            x = this.conn.rs.getRow();
            this.conn.rs.first();
            //JOptionPane.showMessageDialog(this, "Habitacion Encontrada.");                 
        } catch (SQLException ex) {
            Logger.getLogger(Salidas.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Huseped No Encontrado.");
        } 
        
        //Obtencion de la los datos de Huesped para la tabla
        if (n != 0){ 
            Object datos[][] = new Object [n][8];
            for (int i = 0; i < n; i++) {
                try {  
                    datos[i][0] = this.conn.rs.getString(1);
                    datos[i][1] = this.conn.rs.getString(2);
                    datos[i][2] = this.conn.rs.getInt(3);
                    datos[i][3] = this.conn.rs.getString(4);
                    datos[i][4] = this.conn.rs.getInt(5);
                    datos[i][5] = this.conn.rs.getDate(6);
                    datos[i][6] = this.conn.rs.getInt(7);
                    datos[i][7] = this.conn.rs.getString(8);
                    this.conn.rs.next();
                } catch (Exception ex) {
                    System.out.println("Error #2..." + ex.getMessage());
                   JOptionPane.showMessageDialog(this, ex.getMessage());
                }
            }
            String columnas[] = {"NOMBRE", " TIPO DE HABITACION", "NUMERO DE HAB", "CIUDAD", "NUM PERSONAS", " FECHA ENTRADA", "TOTAL DE DIAS", "FECHA DE SALIDA"};
            this.jTablehuesped.setModel(new DefaultTableModel(datos, columnas));
            
            //extraccion de datos.
            for (int i=0; i<n; i++) {
                this.nom=(String) datos[i][0];
                this.tipoHab=(String) datos[i][1];
                this.nohab=(int) datos[i][2];
                this.ciudad=(String) datos[i][3];
                this.numper=(int) datos[i][4];
                //this.fechaentr=(String) datos[i][5];
                this.totaldd=(int) datos[i][6];
                //this.fechasal=(String) datos[i][7];
            }
        }
        
        //Operaciones
        if(this.jRadioButtonPersonaEx.isSelected()){ costoext=(costoext+200)*this.totaldd; b1=1;}
        
        if("Sencilla".equals(this.tipoHab)){this.total=(Double)((costoext+300)*(this.totaldd));}        
        if("Doble".equals(this.tipoHab)){this.total=(Double)((costoext+450)*(this.totaldd));}
        if("Triple".equals(this.tipoHab)){this.total=(Double)((costoext+600)*(this.totaldd));}

        //Creacion de pdf
        double aux=0;
        String ubicacion, fecha, nombreh, ciudadorgi, fechadeingreso,fechadesalida,tipodehabitacion,costodehabitacion="0",diasenelhotel,totalsincargosextra="0",totalconcargosextra,listadecargosextra; 
        
        ubicacion = "refroma #501, zona centro Oaxaca\n";
        fecha=this.fechasal;
        nombreh = this.nom;
        ciudadorgi = this.ciudad;
        fechadeingreso=this.fechaentr;
        fechadesalida=this.fechasal;
        tipodehabitacion=this.tipoHab;
        
        Integer y1 = new Integer(300);//"Sencilla".equals(this.tipoHab)
        if("Sencilla".equals(this.tipoHab)){costodehabitacion=Integer.toString(300);   aux=300*this.totaldd;   totalsincargosextra=String.valueOf(aux);}
        if("Doble".equals(this.tipoHab)){costodehabitacion=Integer.toString(450);  aux=450*this.totaldd;  totalsincargosextra=String.valueOf(aux);}
        if("Triple".equals(this.tipoHab)){costodehabitacion=Integer.toString(600); aux=600*this.totaldd;  totalsincargosextra=String.valueOf(aux);}
        JOptionPane.showMessageDialog(this, "auxiliar:"+aux);
        JOptionPane.showMessageDialog(this, "rotalsincargosex:"+totalsincargosextra);
        
        diasenelhotel=Integer.toString(this.totaldd);
        totalconcargosextra=String.valueOf(this.total);
        listadecargosextra="hacer";
        
        System.out.println("Generando PDF");
        try {
            creaPdf(ubicacion, fecha, nombreh, ciudadorgi, fechadeingreso, fechadesalida, tipodehabitacion, costodehabitacion, diasenelhotel, totalsincargosextra, totalconcargosextra, listadecargosextra);
        } catch (DocumentException ex) {
            Logger.getLogger(Salidas.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Salidas.class.getName()).log(Level.SEVERE, null, ex);
        }
        //System.out.println("PDF generado exitosamente!!!!!!!");
        //fin de creacion de pdf
        
        //tabla de servicios
        String query4 = "select * from servicios";
        this.conn.Consult(query4);
        int y=0;
        
        try {
            this.conn.rs.last();
            y = this.conn.rs.getRow();
            this.conn.rs.first();
            //JOptionPane.showMessageDialog(this, "Habitacion Encontrada.");                 
        } catch (SQLException ex) {
            Logger.getLogger(Salidas.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Huseped No Encontrado.");
        } 
        
        //Obtencion de la los datos de Huesped
        if (n != 0){ 
            Object datos[][] = new Object [n][9];
            for (int i = 0; i < n; i++) {
                try {  
                    datos[i][0] = this.conn.rs.getDouble(1);
                    datos[i][1] = this.conn.rs.getInt(2);
                    datos[i][2] = this.conn.rs.getInt(3);
                    datos[i][3] = this.conn.rs.getInt(4);
                    datos[i][4] = this.conn.rs.getInt(5);
                    datos[i][5] = this.conn.rs.getInt(6);
                    datos[i][6] = this.conn.rs.getInt(7);
                    datos[i][7] = this.conn.rs.getInt(8);
                    datos[i][8] = this.conn.rs.getInt(9);
                    this.conn.rs.next();
                } catch (Exception ex) {
                    System.out.println("Error #2..." + ex.getMessage());
                   JOptionPane.showMessageDialog(this, ex.getMessage());  
                }
                for (int j = 0; j < 10; j++) {
                     if(b1!=0){
                         //datos[j][0]=datos[j][0]+this.total; 
                         
                     }   
                } 
                
            }
            String columnas[] = {"INGRESOS", " PERSONA EXTRA", "GIMNASIO", "SPA", "BAR", " TINTORERIA", "NIÑERA", "SERVICIO AL CUARTO","EVENTO ESPECIAL"};
            this.jTableServicios.setModel(new DefaultTableModel(datos, columnas));
             //for (int i=0; i<n; i++){
             
             
            // }
        }
      
        
    //fin class   
    }//GEN-LAST:event_jButtonTiketActionPerformed

    private void jButtonRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegresarActionPerformed
        // TODO add your handling code here:
        principal llamar = new principal();
        llamar.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButtonRegresarActionPerformed
    
    public static void creaPdf(String a,String b, String c, String d, String e, String f,String g,String h,String i,String j,String k,String l) throws DocumentException, FileNotFoundException, BadElementException{
        Document pdf = new Document();
        
            FileOutputStream docPdf = new FileOutputStream("Salida.pdf");
            PdfWriter.getInstance(pdf, docPdf);
            pdf.open();
            
            
            try {
                Image logo = Image.getInstance("logohotel.JPG");
                logo.scaleToFit(350, 147);
                logo.setAlignment(Chunk.ALIGN_JUSTIFIED);
                pdf.add(logo);
            } catch (IOException ex) {
                System.out.println("Primer Imagen no pudo ser colocada");
            }
           
            Paragraph tit = new Paragraph("\nUbicacion: " + a, FontFactory.getFont("courier", 14));
            tit.setAlignment(Element.ALIGN_CENTER);
            pdf.add(tit);
            Paragraph dip = new Paragraph("\nFecha del dia: "+ b, FontFactory.getFont("courier", 14));
            dip.setAlignment(Element.ALIGN_CENTER);
            pdf.add(dip);
            Paragraph alu = new Paragraph("\nNombre del huesped: "+c, FontFactory.getFont("courier", 14));
            alu.setAlignment(Element.ALIGN_CENTER);
            pdf.add(alu);
            Paragraph nom = new Paragraph("\nCiudad de origen: " + d , FontFactory.getFont("courier", 14));
            nom.setAlignment(Element.ALIGN_CENTER);
            pdf.add(nom);
            Paragraph por = new Paragraph("\nFecha de ingreso: "+e, FontFactory.getFont("courier", 14));
            por.setAlignment(Element.ALIGN_CENTER);
            pdf.add(por);
            Paragraph lol = new Paragraph("\nFecha de isalida: "+ f, FontFactory.getFont("courier", 14));
            por.setAlignment(Element.ALIGN_CENTER);
            pdf.add(lol);
            Paragraph mot = new Paragraph("\nTipo de habitacion: " + g , FontFactory.getFont("courier", 14));
            mot.setAlignment(Element.ALIGN_CENTER);
            pdf.add(mot);
            Paragraph fec = new Paragraph("\nCoasto de habitacion: " + h, FontFactory.getFont("courier", 14));
            fec.setAlignment(Element.ALIGN_CENTER);
            pdf.add(fec);
            Paragraph ddh = new Paragraph("\nDias en el hotel: " + i, FontFactory.getFont("courier", 14));
            fec.setAlignment(Element.ALIGN_CENTER);
            pdf.add(ddh);
            Paragraph ciu = new Paragraph("\nTotal a pagar sin cargos extra: " + j , FontFactory.getFont("courier", 14));
            ciu.setAlignment(Element.ALIGN_CENTER);
            pdf.add(ciu);
            Paragraph dam = new Paragraph("\nTotal a pagar con cargos extra: " + k , FontFactory.getFont("courier", 14));
            ciu.setAlignment(Element.ALIGN_CENTER);
            pdf.add(dam);
            //Paragraph list = new Paragraph("\nlista de cargos extra: " + l , FontFactory.getFont("courier", 14));
            //ciu.setAlignment(Element.ALIGN_CENTER);
            //pdf.add(list);
            
            Paragraph nomb = new Paragraph("\nGerente Tania Martinez" , FontFactory.getFont("courier", 14));
            ciu.setAlignment(Element.ALIGN_CENTER);
            pdf.add(nomb);

            try {
                Image firma = Image.getInstance("firma.png");
                firma.scaleToFit(125, 50);
                firma.setAlignment(Chunk.ALIGN_JUSTIFIED);
                pdf.add(firma);
            } catch (IOException ex) {
                System.out.println("Segunda Imagen no pudo ser colocada");
            }
            
            Paragraph mensf = new Paragraph("\nVuelva pronto... " , FontFactory.getFont("courier", 14));
            ciu.setAlignment(Element.ALIGN_CENTER);
            pdf.add(mensf);
            
            pdf.close();        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Salidas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Salidas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Salidas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Salidas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        final MySqlConn objConn = new MySqlConn();
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Salidas(objConn).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonRegresar;
    private javax.swing.JButton jButtonTiket;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButtonBar;
    private javax.swing.JRadioButton jRadioButtonEventosE;
    private javax.swing.JRadioButton jRadioButtonGym;
    private javax.swing.JRadioButton jRadioButtonNiñera;
    private javax.swing.JRadioButton jRadioButtonPersonaEx;
    private javax.swing.JRadioButton jRadioButtonServCuarto;
    private javax.swing.JRadioButton jRadioButtonSpa;
    private javax.swing.JRadioButton jRadioButtonTintoreria;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableHabitacion;
    private javax.swing.JTable jTableServicios;
    private javax.swing.JTable jTablehuesped;
    private javax.swing.JTextField jTextFieldNumHab;
    // End of variables declaration//GEN-END:variables
}
